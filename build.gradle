plugins {
  id "java-library"
  id "com.github.johnrengelman.shadow" version "5.2.0"
}

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

group = "com.mineteria"
version = "0.1.0-SNAPSHOT"
description = "Allows the application of mixins provided by plugins on Mineteria."

repositories {
  mavenCentral()
  maven {
    url "https://oss.sonatype.org/content/repositories/snapshots/"
  }
  maven {
    url "https://repo.spongepowered.org/maven/"
  }
  maven {
    url "https://files.minecraftforge.net/maven/"
  }
}

dependencies {
  // API
  api "org.apache.logging.log4j:log4j-api:2.8.1"
  api "org.apache.logging.log4j:log4j-core:2.8.1"
  api "org.checkerframework:checker-qual:3.9.0"

  // Common
  api("com.google.guava:guava:21.0") {
    exclude group: "com.google.code.findbugs", module: "jsr305" // We don't want to use jsr305, use checkerframework
    exclude group: "org.checkerframework", module: "checker-qual" // We use our own version
    exclude group: "com.google.j2objc", module: "j2objc-annotations"
    exclude group: "org.codehaus.mojo", module: "animal-sniffer-annotations"
    exclude group: "com.google.errorprone", module: "error_prone_annotations"
  }

  api "com.google.code.gson:gson:2.8.0"

  // ASM
  api "org.ow2.asm:asm:7.2"
  api "org.ow2.asm:asm-analysis:7.2"
  api "org.ow2.asm:asm-commons:7.2"
  api "org.ow2.asm:asm-tree:7.2"
  api "org.ow2.asm:asm-util:7.2"

  // Mixins
  api "org.spongepowered:mixin:0.8.2"

  // Access Transformers
  api("net.minecraftforge:accesstransformers:2.2.0") {
    exclude group: "org.apache.logging.log4j"
  }

  // Core
  api("cpw.mods:modlauncher:8.0.6") {
    exclude group: "org.apache.logging.log4j"
  }

  api("cpw.mods:grossjava9hacks:1.3.0") {
    exclude group: "org.apache.logging.log4j"
  }
}

tasks.withType(JavaCompile) {
  options.compilerArgs += ["-Xlint:all", "-Xlint:-path", "-parameters"]
  options.deprecation = true
  options.encoding = "UTF-8"
}


jar {
  manifest.attributes(
    "Main-Class": "com.mineteria.implant.ImplantBootstrap",
    "Specification-Title": "Implant",
    "Specification-Vendor": "Mineteria",
    "Specification-Version": 1,
    "Implementation-Title": project.name,
    "Implementation-Version": project.version
  )
}

task sourcesJar(type: Jar) {
  from sourceSets.main.allJava
  classifier = 'sources'
}

shadowJar {
  classifier = "shaded"

  dependencies {
    // Logging
    include dependency('org.apache.logging.log4j:log4j-api')
    include dependency('org.apache.logging.log4j:log4j-core')

    // General
    include dependency('org.checkerframework:checker-qual')
    include dependency('com.google.code.gson:gson')
    include dependency('com.google.guava:guava')

    // Modlauncher
    include dependency('cpw.mods:grossjava9hacks')
    include dependency('cpw.mods:modlauncher')
    include dependency('org.ow2.asm:asm')
    include dependency('org.ow2.asm:asm-analysis')
    include dependency('org.ow2.asm:asm-commons')
    include dependency('org.ow2.asm:asm-tree')
    include dependency('org.ow2.asm:asm-util')
    include dependency('net.sf.jopt-simple:jopt-simple')

    // Access Transformers
    include dependency('net.minecraftforge:accesstransformers')

    // Mixin
    include dependency('org.spongepowered:mixin')
  }

  relocate 'com.google', 'com.mineteria.implant.relocate.google'
}
